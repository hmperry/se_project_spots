!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,n)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(n.inputErrorClass)},n=(e,t,n)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,n):(t.classList.remove(n.inactiveButtonClass),t.disabled=!1)},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},r=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((r=>{((e,r)=>{const a=Array.from(e.querySelectorAll(r.inputSelector)),c=e.querySelector(r.submitButtonSelector);console.log(a),console.log(c),n(a,c,r),e.addEventListener("reset",(()=>{o(c,r)})),a.forEach((o=>{o.addEventListener("input",(function(){((e,n,o)=>{console.log(n.validationMessage),n.validity.valid?t(e,n,o):((e,t,n,o)=>{e.querySelector(`#${t.id}-error`).textContent=n,t.classList.add(o.inputErrorClass)})(e,n,n.validationMessage,o)})(e,o,r),n(a,c,r)}))}))})(r,e)}))};r(e);const a=new class{constructor({baseUrl:e,headers:t,cardID:n}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}addNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{...this._headers,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{...this._headers,"Content-Type":"application/json"}}).then(this._checkResponse)}changeLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:{...this._headers,"Content-Type":"application/json"}}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{...this._headers,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}changeProfilePicture({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{...this._headers,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3865b531-c637-4f08-82ee-36af95a41c77","Content-Type":"application/json"}}),c=document.querySelector(".profile__avatar"),s=document.querySelector(".profile__name"),i=document.querySelector(".profile__title"),l=document.forms["profile-form"],d=document.querySelector(".profile__edit-button"),u=document.querySelector(".image__container"),m=document.querySelector("#avatar-modal"),h=document.querySelector("#avatar-form"),_=m.querySelector(".modal__submit-button"),v=document.querySelector("#avatar-link-input"),p=document.querySelector("#edit-profile-modal"),f=p.querySelector("#profile-name-input"),y=p.querySelector("#profile-description-input"),S=p.querySelector(".modal__submit-button"),C=document.querySelector(".profile__new-post-button"),b=document.querySelector("#add-card-modal"),k=b.querySelector("#add-card-link-input"),E=b.querySelector("#add-card-name-input"),q=document.forms["add-card-form"],g=b.querySelector(".modal__submit-button"),L=document.querySelector("#cards_list"),x=document.querySelector("#card-template"),T=document.querySelector("#preview-modal"),U=T.querySelector(".modal__image"),$=T.querySelector(".modal__caption"),A=document.querySelector("#delete-modal"),D=A.querySelector(".modal__delete-button"),P=document.querySelector(".modal__cancel-button");let w,I;const j=document.querySelectorAll(".modal__close-button"),R=document.querySelectorAll(".modal");a.getAppInfo().then((([e,t])=>{e.forEach((e=>{const t=G(e);L.append(t)})),c.src=t.avatar,console.log(t),i.textContent=t.about,s.textContent=t.name})).catch((e=>{console.error(e)})),l.addEventListener("submit",(function(e){e.preventDefault(),S.textContent="Saving...",a.editUserInfo({name:f.value,about:y.value}).then((e=>{S.textContent="Save",s.textContent=e.name,i.textContent=e.about,J(p)})).catch((()=>{S.textContent="Save failed. Try again.",console.error(),setTimeout((()=>{D.textContent="Save"}),2e3)}))})),D.addEventListener("click",(function(){D.textContent="Deleting...",a.deleteCard(I).then((()=>{D.textContent="Delete",w.remove(),J(A)})).catch((()=>{D.textContent="Delete failed. Try again.",console.error(),setTimeout((()=>{D.textContent="Delete"}),2e3)}))})),P.addEventListener("click",(()=>J(A))),q.addEventListener("submit",(function(e){e.preventDefault(),g.textContent="Saving...";const t={name:E.value,link:k.value};a.addNewCard(t).then((t=>{g.textContent="Save",J(b);const n=G(t);e.target.reset(),L.prepend(n)})).catch((()=>{g.textContent="Save failed. Try again.",console.error(),setTimeout((()=>{g.textContent="Save"}),2e3)}))})),u.addEventListener("click",(()=>{O(m)})),C.addEventListener("click",(()=>{O(b)})),_.addEventListener("click",(function(e){e.preventDefault(),_.textContent="Saving...";const t={avatar:v.value};a.changeProfilePicture(t).then((e=>{_.textContent="Save",e.avatar=v.value,J(m),h.reset(),c.src=e.avatar})).catch((()=>{_.textContent="Save failed. Try again.",console.error(),setTimeout((()=>{_.textContent="Save"}),2e3)}))})),d.addEventListener("click",(function(){var n,o;f.value=s.textContent,y.value=i.textContent,n=l,o=e,[f,y].forEach((e=>{t(n,e,o)})),O(p)}));const N=e=>{R.forEach((t=>{e.target===t&&t.classList.contains("modal_opened")&&J(t)}))},B=e=>{R.forEach((t=>{"Escape"===e.key&&R.forEach(J)}))};function O(e){e.classList.add("modal_opened"),document.addEventListener("mousedown",N),document.addEventListener("keydown",B)}function J(e){e.classList.remove("modal_opened"),document.removeEventListener("mousedown",N),document.removeEventListener("keydown",B)}function G(e){const t=x.content.querySelector(".card").cloneNode(!0);t.querySelector(".card__title").textContent=e.name;const n=t.querySelector(".card__image");n.src=e.link,n.alt=e.name;const o=t.querySelector(".card__like-button");return!0===e.isLiked&&o.classList.add("card__like-button_liked"),o.addEventListener("click",(t=>function(e,t){console.log(t),I=t._id;const n=!!e.target.classList.contains("card__like-button_liked");a.changeLike(t._id,n).then((()=>{!0===n?e.target.classList.remove("card__like-button_liked"):e.target.classList.add("card__like-button_liked")})).catch(console.error)}(t,e))),t.querySelector(".card__delete-button").addEventListener("click",(n=>function(e,t){w=e,I=t._id,O(A)}(t,e))),n.addEventListener("click",(()=>{U.src=e.link,U.alt=e.name,$.textContent=e.name,O(T)})),t}j.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>J(t)))})),r(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,