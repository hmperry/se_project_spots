!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,o)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(o.inputErrorClass)},o=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,o):(t.classList.remove(o.inactiveButtonClass),t.disabled=!1)},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((n=>{((e,n)=>{const c=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);console.log(c),console.log(a),o(c,a,n),e.addEventListener("reset",(()=>{r(a,n)})),c.forEach((r=>{r.addEventListener("input",(function(){((e,o,r)=>{console.log(o.validationMessage),o.validity.valid?t(e,o,r):((e,t,o,r)=>{e.querySelector(`#${t.id}-error`).textContent=o,t.classList.add(r.inputErrorClass)})(e,o,o.validationMessage,r)})(e,r,n),o(c,a,n)}))}))})(n,e)}))};n(e),new class{constructor(e){}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1",{headers:{authorization:"3865b531-c637-4f08-82ee-36af95a41c77"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3865b531-c637-4f08-82ee-36af95a41c77","Content-Type":"application/json"}}).getInitialCards().then((e=>{e.forEach((e=>{const t=b(e);c.append(t)}))}));const c=document.querySelector("#cards_list"),a=document.querySelector(".profile__edit-button"),l=document.querySelector("#edit-profile-modal"),i=document.querySelector(".profile__name"),d=document.querySelector(".profile__title"),s=l.querySelector("#profile-name-input"),u=l.querySelector("#profile-description-input"),m=document.forms["profile-form"];a.addEventListener("click",(()=>{var o,r;s.value=i.textContent,u.value=d.textContent,o=m,r=e,[s,u].forEach((e=>{t(o,e,r)})),f(l)}));const _=document.querySelectorAll(".modal"),p=e=>{_.forEach((t=>{e.target===t&&t.classList.contains("modal_opened")&&y(t)}))},v=e=>{_.forEach((t=>{"Escape"===e.key&&_.forEach(y)}))};function f(e){e.classList.add("modal_opened"),document.addEventListener("mousedown",p),document.addEventListener("keydown",v)}function y(e){e.classList.remove("modal_opened"),document.removeEventListener("mousedown",p),document.removeEventListener("keydown",v)}document.querySelectorAll(".modal__close-button").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>y(t)))})),m.addEventListener("submit",(function(e){e.preventDefault(),i.textContent=s.value,d.textContent=u.value,y(l)}));const S=document.querySelector("#card-template"),q=document.querySelector("#preview-modal"),E=q.querySelector(".modal__image"),L=q.querySelector(".modal__caption");function b(e){const t=S.content.querySelector(".card").cloneNode(!0);t.querySelector(".card__title").textContent=e.name;const o=t.querySelector(".card__image");o.src=e.link,o.alt=e.name;const r=t.querySelector(".card__like-button");return r.addEventListener("click",(()=>{r.classList.toggle("card__like-button_liked")})),t.querySelector(".card__delete-button").addEventListener("click",(()=>{t.remove()})),o.addEventListener("click",(()=>{E.src=e.link,E.alt=e.name,L.textContent=e.name,f(q)})),t}const C=document.querySelector(".profile__new-post-button"),h=document.querySelector("#add-card-modal"),k=h.querySelector("#add-card-link-input"),g=h.querySelector("#add-card-name-input"),x=document.forms["add-card-form"];h.querySelector(".modal__submit-button"),C.addEventListener("click",(()=>{f(h)})),x.addEventListener("submit",(function(e){e.preventDefault();const t=b({name:g.value,link:k.value});c.prepend(t),e.target.reset(),y(h)})),n(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,